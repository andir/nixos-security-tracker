# Generated by Django 3.1.3 on 2020-11-04 22:25

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(help_text="CVE Identifier", max_length=32),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, help_text="A note regarding this issue"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute_name",
                    models.CharField(
                        help_text="The name of the package", max_length=255
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name of the package", max_length=255
                    ),
                ),
                (
                    "version",
                    models.CharField(
                        help_text="The version of the package", max_length=100
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alive",
                    models.BooleanField(
                        default=False, help_text="The release is still supported"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SCMRevision",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        help_text="The revision in the SCM repository", max_length=255
                    ),
                ),
                (
                    "release",
                    models.ForeignKey(
                        help_text="The release this revision belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.release",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PackageAdvisoryStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unknown", "unknown"),
                            ("fixed", "fixed"),
                            ("unaffected", "unaffected"),
                            ("vulnerable", "vulnerable"),
                        ],
                        default="unknown",
                        help_text="Status of the issue in the package.",
                        max_length=10,
                    ),
                ),
                (
                    "confirmed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this issue status has been confirmed by a human.",
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, help_text="A note regarding this issue"
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tracker.issue"
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tracker.package",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="package",
            name="revision",
            field=models.ForeignKey(
                help_text="The revision this package appeard in",
                on_delete=django.db.models.deletion.CASCADE,
                to="tracker.scmrevision",
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="packages",
            field=models.ManyToManyField(
                through="tracker.PackageAdvisoryStatus", to="tracker.Package"
            ),
        ),
        migrations.CreateModel(
            name="Advisory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nsa_id", models.CharField(max_length=32, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "draft"),
                            ("RELEASED", "released"),
                            ("REVISED", "revised"),
                        ],
                        default="DRAFT",
                        max_length=8,
                    ),
                ),
                (
                    "not_before",
                    models.DateTimeField(
                        default=datetime.datetime.utcnow,
                        help_text="Not published before this date",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("UNKNOWN", "unknown"),
                            ("LOW", "low"),
                            ("MEDIUM", "medium"),
                            ("HIGH", "high"),
                            ("CRITICAL", "critical"),
                        ],
                        default="UNKNOWN",
                        help_text="The severity of this advisory",
                        max_length=8,
                    ),
                ),
                (
                    "internal_note",
                    models.TextField(
                        blank=True, help_text="A note regarding this issue"
                    ),
                ),
                (
                    "title",
                    models.TextField(
                        help_text="The title the advisory (e.g. the email subject)"
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        help_text="The text of the advisory (e.g. the email body)"
                    ),
                ),
                (
                    "issues",
                    models.ManyToManyField(
                        help_text="The issues addressed in this advisory",
                        to="tracker.Issue",
                    ),
                ),
            ],
        ),
    ]
