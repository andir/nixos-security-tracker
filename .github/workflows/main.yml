on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nixbuild/nix-quick-install-action@v15
      - uses: nixbuild/nixbuild-action@v5
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
      - name: black
        run: nix-shell --pure --run "black --check ."
      - name: bandit
        run: nix-shell --pure --run "bandit -r ."
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nixbuild/nix-quick-install-action@v15
      - uses: nixbuild/nixbuild-action@v5
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
      - run: nix-shell --pure --run "pytest --cov=nixos_security_tracker --cov=tracker --cov-report=term --cov-report=html:coverage-report | tee pytest.log"
      - name: publish coverage report
        run: |
          $(nix-build .github/workflows/publish-coverage.nix)
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nixbuild/nix-quick-install-action@v15
      - uses: nixbuild/nixbuild-action@v5
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
      - run: nix-build
      - run: nix-build -A staticFiles
      - run: nix-build -A manage
  vm-test:
    # only instantiate but do not run/build the test as there is currently no way to use
    # KVM on neither GitHub Actions nor nixbuild.net
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: nixbuild/nix-quick-install-action@v15
        with:
          nix_conf: "system-features = nixos-test benchmark big-parallel kvm"
      - uses: nixbuild/nixbuild-action@v5
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}
      - run: nix-build test.nix -A driver
      - run: nix-build --max-jobs 1 test.nix
