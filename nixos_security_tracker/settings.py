"""
Django settings for nixos_security_tracker project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from typing import List

TEST_RUNNER = "nixos_security_tracker.pytest_runner.PytestTestRunner"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    "NIXOS_SECURITY_TRACKER_SECRET_KEY", "test-string-for-development"
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.getenv("NIXOS_SECURITY_TRACKER_DEBUG", False))

ALLOWED_HOSTS: List[str] = ["localhost", "127.0.0.1", "::1"]

INTERNAL_IPS: List[str] = ["127.0.0.1", "::1"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "tracker",
    "bootstrap4",
    "django_tables2",
]

if DEBUG:
    INSTALLED_APPS.append("debug_toolbar")

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if DEBUG:
    # append the django-debug-toolbar middleware as early as possible but after
    # response compressors such as GZipMiddleware
    # https://django-debug-toolbar.readthedocs.io/en/latest/installation.html#enabling-middleware
    MIDDLEWARE = ["debug_toolbar.middleware.DebugToolbarMiddleware"] + MIDDLEWARE

ROOT_URLCONF = "nixos_security_tracker.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "nixos_security_tracker.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

_db_type = os.getenv("NIXOS_SECURITY_TRACKER_DATABASE_TYPE", "sqlite")

DATABASES = {}

if _db_type == "sqlite":
    DATABASES["default"] = {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.getenv(
            "NIXOS_SECURITY_TRACKER_DATABASE_NAME", BASE_DIR / "db.sqlite3"
        ),
    }
elif _db_type == "postgresql":
    DATABASES["default"] = {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": os.getenv(
            "NIXOS_SECURITY_TRACKER_DATABASE_NAME", "nixos_security_tracker"
        ),
        "USER": os.getenv(
            "NIXOS_SECURITY_TRACKER_DATABASE_USER", "nixos_security_tracker"
        ),
        "HOST": os.getenv("NIXOS_SECURITY_TRACKER_DATABASE_HOST", "localhost"),
        "PASSWORD": os.getenv("NIXOS_SECURITY_TRACKER_DATABASE_PASSWORD", ""),
        "PORT": os.getenv("NIXOS_SECURITY_TRACKER_DATABASE_PORT", ""),
    }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

# Disabled so we can setup sane formats that make sense for an international audience
USE_L10N = False

USE_TZ = True

DATE_FORMAT = "Y-m-d"
DATETIME_FORMAT = "Y-m-d H:i"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = os.getenv("NIXOS_SECURITY_TRACKER_STATIC_ROOT")

# FIXME: serve the CSS & JavaScript files locally instead of pointing at some CDN
BOOTSTRAP4 = {}

# Number of items per page in list and table views
PAGINATE_BY = 15

# GitHub Event shared key
_github_events_secret = os.getenv("NIXOS_SECURITY_TRACKER_GITHUB_EVENTS_SECRET", False)
if _github_events_secret:
    GITHUB_EVENTS_SECRET = _github_events_secret.encode()
else:
    GITHUB_EVENTS_SECRET = False
